generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_NODE362")
}

model food {
  food_id     Int        @id @default(autoincrement())
  food_name   String?    @db.VarChar(40)
  image       String?    @db.VarChar(30)
  price       Float?     @db.Float
  description String?    @db.VarChar(100)
  type_id     Int?
  food_type   food_type? @relation(fields: [type_id], references: [type_id], onDelete: NoAction, onUpdate: NoAction, map: "food_ibfk_1")
  orders      orders[]
  sub_food    sub_food[]

  @@index([type_id], map: "type_id")
}

model food_type {
  type_id   Int     @id @default(autoincrement())
  type_name String? @db.VarChar(40)
  food      food[]
}

model like_res {
  user_id    Int
  res_id     Int
  date_like  DateTime   @db.DateTime(0)
  user       user       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_1")
  restaurant restaurant @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "like_res_ibfk_2")

  @@id([user_id, res_id, date_like])
  @@index([res_id], map: "res_id")
  @@index([user_id], map: "user_id")
}

model orders {
  food_id Int?
  code    String @id @db.VarChar(30)
  amount  Int?
  user_id Int?
  user    user?  @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_user")
  food    food?  @relation(fields: [food_id], references: [food_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")

  @@index([user_id], map: "fk_user")
  @@index([food_id], map: "food_id")
}

model rate_res {
  user_id    Int
  res_id     Int
  amount     Int?
  date_rate  DateTime   @db.DateTime(0)
  user       user       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_1")
  restaurant restaurant @relation(fields: [res_id], references: [res_id], onDelete: NoAction, onUpdate: NoAction, map: "rate_res_ibfk_2")

  @@id([user_id, res_id, date_rate])
  @@index([res_id], map: "res_id")
  @@index([user_id], map: "user_id")
}

model restaurant {
  res_id      Int        @id @default(autoincrement())
  res_name    String?    @db.VarChar(40)
  Image       String?    @db.VarChar(40)
  description String?    @db.VarChar(100)
  like_res    like_res[]
  rate_res    rate_res[]
}

model sub_food {
  sub_id    Int     @id @default(autoincrement())
  sub_name  String? @db.VarChar(40)
  food_id   Int?
  sub_price Float?  @db.Float
  food      food?   @relation(fields: [food_id], references: [food_id], onDelete: NoAction, onUpdate: NoAction, map: "sub_food_ibfk_1")

  @@index([food_id], map: "food_id")
}

model user {
  user_id   Int        @id @default(autoincrement())
  full_name String?    @db.VarChar(40)
  email     String?    @db.VarChar(40)
  password  String?    @db.VarChar(40)
  like_res  like_res[]
  orders    orders[]
  rate_res  rate_res[]
}
